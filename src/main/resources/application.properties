spring.application.name=storm-guard
spring.application.description=API de gerenciamento de alertas de furacão

# Data source configuration
spring.datasource.url=jdbc:postgresql://${PGHOST}:${PGPORT}/${PGDATABASE}
spring.datasource.username=${PGUSER}
spring.datasource.password=${PGPASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
# Hibernate settings

# create, update, validate, none
# create-drop: Drop the database at startup and create a new one
# update: Update the database schema on startup
# validate: Validate the database schema on startup
# none: No action will be taken on the database
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Swagger configuration
springdoc.api-docs.title=API StormGuard
springdoc.api-docs.description=Documentação da API de gerenciamento de alertas de furacão
springdoc.api-docs.version=OPENAPI_3_1

management.metrics.export.defaults.enabled=false
management.endpoint.metrics.enabled=false
management.endpoints.web.exposure.include=health,info

server.port=${PORT:8080}
server.error.include-message=always
server.error.include-binding-errors=always